app = ""
kill_timeout = 60

[build]
    dockerfile = "Dockerfile"

[build.args]
    STACKS_BLOCKCHAIN_VERSION = "2.05.0.2.2"
    STACKS_BLOCKCHAIN_API_VERSION = "4.0.4"

[deploy]
    strategy = "immediate"

[env]
    STACKS_NETWORK="mainnet"
    #
    ## stacks-blockchain
    RUST_BACKTRACE="full"
    STACKS_LOG_DEBUG="0"
    # STACKS_LOG_JSON=1
    #
    ## stacks-blockchain-api
    # STACKS_API_ENABLE_FT_METADATA = "1"
    # STACKS_API_ENABLE_NFT_METADATA = "1"
    # STACKS_API_TOKEN_METADATA_ERROR_MODE = "warning"
    # STACKS_ADDRESS_CACHE_SIZE = "10000"
    # BNS_IMPORT_DIR = "/stacks-blockchain/bns-data"
    # STACKS_EXPORT_EVENTS_FILE = "/stacks-blockchain/stacks-node-events.tsv" 

[mounts]
    source="stacks_blockchain_data"
    destination="/stacks-blockchain"

[[services]]
  internal_port = 8080
  processes = ["app"]
  protocol = "tcp"

  [services.concurrency]
    hard_limit = 25
    soft_limit = 20
    type = "connections"

  [[services.http_checks]]
    grace_period = "5m"
    interval = 30000
    method = "get"
    path = "/status"
    protocol = "http"
    timeout = 2000
    tls_skip_verify = false

    [services.http_checks.headers]

  [[services.ports]]
    force_https = true
    handlers = ["http"]
    port = 80

  [[services.ports]]
    handlers = ["tls", "http"]
    port = 443

[[services]]
  internal_port = 20443
  protocol = "tcp"

  [[services.ports]]
    port = "20443"

  [[services.tcp_checks]]
    grace_period = "5m"
    interval = 30000
    timeout = 10000

[[services]]
  internal_port = 20444
  protocol = "tcp"

  [[services.ports]]
    port = "20443"

  [[services.tcp_checks]]
    grace_period = "5m"
    interval = 30000
    timeout = 10000
